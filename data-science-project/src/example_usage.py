"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞ –∏–Ω—Ç–µ—Ä–≤—å—é
"""

from interview_agent import InterviewAgent
import json


def demo_interview():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∞–≥–µ–Ω—Ç–∞ –∏–Ω—Ç–µ—Ä–≤—å—é"""
    print("üé¨ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ê–ì–ï–ù–¢–ê –ò–ù–¢–ï–†–í–¨–Æ")
    print("="*50)
    
    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    agent = InterviewAgent()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–≤—å—é
    result = agent.run_interview()
    
    if result:
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É
        summary = agent.get_interview_summary()
        
        print("\nüìã –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–í–û–î–ö–ê:")
        print(json.dumps(summary, ensure_ascii=False, indent=2))
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–∞–π–ª
        with open('interview_result.json', 'w', encoding='utf-8') as f:
            json.dump(summary, f, ensure_ascii=False, indent=2)
        
        print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: interview_result.json")
    
    return result


def test_workflow():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ workflow –±–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–≤–æ–¥–∞"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï WORKFLOW")
    print("="*30)
    
    agent = InterviewAgent()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–¥—É –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏...")
    agent.state.candidate_name = "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞"
    agent.state.add_message("user", "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞")
    agent.state.add_message("assistant", "–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞!")
    
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–¥—É –ø–æ–ª—É—á–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞...")
    agent.state.candidate_age = 28
    agent.state.add_message("user", "28")
    agent.state.add_message("assistant", "–°–ø–∞—Å–∏–±–æ! –í–∞–º 28 –ª–µ—Ç.")
    
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–æ–ø—Ä–æ—Å–æ–≤...")
    questions = agent._generate_personalized_questions("–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞", 28)
    agent.state.interview_questions = questions
    
    print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤")
    print("‚úÖ Workflow —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    
    return agent.get_interview_summary()


if __name__ == "__main__":
    print("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:")
    print("1. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è")
    print("2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ workflow")
    
    choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1 –∏–ª–∏ 2): ").strip()
    
    if choice == "1":
        demo_interview()
    elif choice == "2":
        test_workflow()
    else:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
        test_workflow()
